---
- name: Add an Apt signing key, uses whichever key is at the URL
  ansible.builtin.apt_key:
    url: https://mariadb.org/mariadb_release_signing_key.asc
    state: present
  become: true
  when: ansible_facts['distribution_major_version'] == "20" or ansible_facts['distribution_major_version'] == "21"

- name: Add specified repository into sources list
  ansible.builtin.apt_repository:
    repo: 'deb [arch=amd64,arm64,ppc64el] http://sgp1.mirrors.digitalocean.com/mariadb/repo/10.4/ubuntu focal main'
    state: present
  become: true
  when: ansible_facts['distribution_major_version'] == "20" or ansible_facts['distribution_major_version'] == "21"

- name: Add an Apt signing key, uses whichever key is at the URL
  ansible.builtin.apt_key:
    url: https://mariadb.org/mariadb_release_signing_key.asc
    state: present
  become: true
  when: ansible_facts['distribution_major_version'] == "18"

- name: Add specified repository into sources list
  ansible.builtin.apt_repository:
    repo: 'deb [arch=amd64,arm64,ppc64el] http://sgp1.mirrors.digitalocean.com/mariadb/repo/10.4/ubuntu bionic main'
    state: present
  become: true
  when: ansible_facts['distribution_major_version'] == "18"


- name: Install a list of packages
  apt:
    pkg:
      - 'mariadb-server'
      - 'redis-server'
    state: present
    update_cache: yes
  become: true

- name: set innodb-buffer-pool-size
  set_fact:
    innodb_buffer_pool_size: '{{ ansible_memtotal_mb * (8/10) | round | int }}'

# # create root .my.cnf config file
# - name: Add .my.cnf
#   template: src=frappe_db.conf.j2 dest=/etc/mysql/my.cnf owner=root group=root mode=0744
#   become: true

# create root .my.cnf config file
- name: Add .my.cnf
  ansible.builtin.template:
    src: "frappe_db.conf.j2"
    dest: "/etc/mysql/my.cnf"
    owner: "root"
    group: "root"
    mode: "0744"
  become: true
  
# Set root password
# UPDATE mysql.user SET Password=PASSWORD('mysecret') WHERE User='root';
# FLUSH PRIVILEGES;

- name: Set root Password
  community.mysql.mysql_user:
    login_password: '{{ mysql_root_pass }}'
    login_user: root
    login_unix_socket: '/var/run/mysqld/mysqld.sock'
    check_implicit_admin: yes
    name: root
    password: '{{ mysql_root_pass }}'
    host: '{{ item }}'
    state: present
  with_items:
    - localhost
    - 127.0.0.1
    - ::1
  become: true

- name: Make sure a mariadb service is running
  ansible.builtin.systemd:
    state: restarted
    name: mariadb
  become: true

# - name: Reload privilege tables
#   command: 'mysql -u root -p{{  mysql_root_pass }} -ne {{ item }}'
#   with_items:
#     - FLUSH PRIVILEGES
#     - DELETE FROM mysql.user WHERE User='';
#     - DELETE FROM mysql.user WHERE User='root' AND Host NOT IN ('localhost', '127.0.0.1', '::1')
#     - DROP DATABASE IF EXISTS test
#     - DELETE FROM mysql.db WHERE Db='test' OR Db='test\\_%'
#     - FLUSH PRIVILEGES
#   changed_when: False

- name: Run several insert queries against db test_db in single transaction
  community.mysql.mysql_query:
    login_user: root
    login_password: "{{  mysql_root_pass }}"
    query:
    - FLUSH PRIVILEGES
    - DELETE FROM mysql.user WHERE User=''
    - DELETE FROM mysql.user WHERE User='root' AND Host NOT IN ('localhost', '127.0.0.1', '::1')
    - DROP DATABASE IF EXISTS test
    - DELETE FROM mysql.db WHERE Db='test' OR Db='test\\_%'
    - FLUSH PRIVILEGES
  become: true
