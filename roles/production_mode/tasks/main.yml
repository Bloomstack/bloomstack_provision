---
# tasks file for production_mode
- name: create supervisor conf
  template:
    src: 'templates/supervisor.conf.j2'
    dest: '{{ frappe_home }}/{{ bench_name }}/config/supervisor.conf'
    owner: '{{ user_name }}'
    group: '{{ user_name }}'
    mode: '0766'
  become_user: '{{ user_name }}'
  when: docker_setup == '1'

- name: Create a symbolic link
  ansible.builtin.file:
    src: '{{ frappe_home }}/{{ bench_name }}/config/supervisor.conf'
    dest: '/etc/supervisor/conf.d/{{ bench_name }}.conf'
    owner: root
    group: root
    mode: '0776'
    state: link
  when: docker_setup == '1'

- name: bench setup production
  command: '{{ items }}'
  become_user: '{{ user_name }}'
  with_items:
    - 'bench setup sudoers {{ user_name }}'
    - 'bench setup production {{ user_name }}'
  args:
    chdir: '/home/{{ user_name }}/{{ bench_name }}'
  when: docker_setup == '0'
  become: true

- name: Make sure a supervisor service is running
  ansible.builtin.systemd:
    state: restarted
    name: supervisor
  
- name: make sure supervisor will run on bench restart
  ansible.builtin.replace:
    path: '{{ frappe_home }}/{{ bench_name }}/sites/common_site_config.json'
    regexp: '"restart_supervisor_on_update": false'
    replace: '"restart_supervisor_on_update": true'

- name: create .vimrc
  ansible.builtin.copy:
    src: 'templates/vimrc.j2'
    dest: '{{ frappe_home }}/.vimrc'
    owner: '{{ user_name }}'
    group: '{{ user_name }}'
    mode: '0766'
  become_user: '{{ user_name }}'
# - name: Manage the state of program to be in started state
#   community.general.supervisorctl:
#     name: all
#     state: restarted